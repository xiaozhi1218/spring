<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--1. 包扫描-->
    <!--将UserServiceImpl、MyAspect进行IOC-->
    <context:component-scan base-package="com.itheima"/>

    <!--
        进行aop配置
            目标1: 在执行增删改查方法之前，都加入权限校验
                  1. 切入点是: UserServiceImpl中的所有方法
                  2. 通知是: MyAspect中的checkPermission方法
                  3. 通知的类型是: 前置通知
                  4. 切面是: MyAspect类的对象
           目标2: 在执行完所有的方法之后都获取方法的返回值，并且进行日志打印 "方法执行完毕...，返回值为:"
                 1. 切入点是: UserServiceImpl中的所有方法
                 2. 通知是: MyAspect中的printResult方法
                 3. 通知的类型是: 后置通知
                 4. 切面是: MyAspect类的对象
           目标3: 在执行所有方法出现异常之后,将异常信息写入到本地文件中
                 1. 切入点是: UserServiceImpl中的所有方法
                 2. 通知是: MyAspect中的printError方法
                 3. 通知的类型是: 异常通知
                 4. 切面是: MyAspect类的对象
           目标4: 在执行所有方法之后，无论是否出现异常，均执行 "资源回收的操作......"
                1.切入点是: UserServiceImpl中的所有方法
                2. 通知是:  MyAspect中的close方法
                3. 通知的类型是: 最终通知
                4. 切面是: MyAspect类的对象
           目标5: 在执行query()方法的过程中，统计执行时间
                1. 切入点是: UserServiceImpl中的query方法
                2. 通知是:  MyAspect中的totalTime方法
                3. 通知的类型是: 环绕通知
                4. 切面是: MyAspect类的对象
    -->
    <aop:config>
        <!--
            expression是切入点表达式，它的作用是用一个表达式描述切入点
        -->
        <aop:pointcut id="pt1" expression="execution(* com.itheima.service.impl.UserServiceImpl.*(..))"/>

        <aop:pointcut id="pt2" expression="execution(String com.itheima.service.impl.UserServiceImpl.query())"/>

        <!--
            配置一个切面
        -->
        <aop:aspect id="ap1" ref="myAspect">
            <!--
                配置通知去增强切入点
            -->
            <aop:before method="checkPermission" pointcut-ref="pt1"></aop:before>
            <!--
                配置后置通知, 后置通知有一个特殊的属性returning用于指定将切入点的返回值赋值给通知中的哪个参数
            -->
            <aop:after-returning returning="returnValue" method="printResult" pointcut-ref="pt1"></aop:after-returning>

            <!--
                配置异常通知
            -->
            <aop:after-throwing throwing="errorMsg" method="printError" pointcut-ref="pt1"></aop:after-throwing>

            <!--
                配置最终通知
            -->
            <aop:after method="close" pointcut-ref="pt1"></aop:after>
            <!--
                配置环绕通知
            -->
            <aop:around method="totalTime" pointcut-ref="pt2"></aop:around>
        </aop:aspect>
    </aop:config>
</beans>